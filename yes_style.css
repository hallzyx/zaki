body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    background-color: #ffffff;
background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25' %3E%3Cdefs%3E%3ClinearGradient id='a' x1='0' x2='0' y1='0' y2='1' gradientTransform='rotate(0,0.5,0.5)'%3E%3Cstop offset='0' stop-color='%233D0738'/%3E%3Cstop offset='1' stop-color='%23000000'/%3E%3C/linearGradient%3E%3C/defs%3E%3Cpattern id='b' width='13' height='13' patternUnits='userSpaceOnUse'%3E%3Ccircle fill='%23ffffff' cx='6.5' cy='6.5' r='6.5'/%3E%3C/pattern%3E%3Crect width='100%25' height='100%25' fill='url(%23a)'/%3E%3Crect width='100%25' height='100%25' fill='url(%23b)' fill-opacity='0.04'/%3E%3C/svg%3E");
background-attachment: fixed;
    font-family: 'Arial', sans-serif;
}

.container {
    text-align: center;
    padding-top:550px;
    padding-bottom:50px;
}

.header_text {
    font-size: 2em;
    font-family: 'Cabin';
    color:rgb(255, 178, 255);
    

}

.gif_container img {
    width: 100%; 
    max-width: 500px; 
    height: auto; 
}

p{
    font-family:"Anta";
    color:white;
    font-size:1.3rem;
    padding: 40px 0 30px 0;
    text-align:center;
}

span{
    display:block;
    font-family: 'Cabin';
    font-size:0.9rem;
    margin-top:60px;
    color:white;
    background: rgb(45, 45, 45);
    border-radius:10px;
    padding: 12px 0 10px 0;
}

ul{
    list-style: none;
    display:flex;
    flex-direction:column;
    gap:35px;
    
}

ul li{
    font-family:"Anek Devanagari";
    padding: 20px 0 10px 0;
    background:rgba(55, 17, 35, 0.75);
    color: white;
    font-size:1.3rem;
}
li{
    --timing: linear(0, 0.3, 0.75, 1);
  
    font-family: Jost, sans-serif;
    font-size: 1rem;
  
    padding: 1rem 2rem;
    background: none;
    color: #fff;
  
    border-image-source: conic-gradient(from var(--a), indigo, purple, hotpink);
    border-image-slice: 1 1 1 1;
    border-image-width: 0.25rem;
  
    animation: move 1s infinite var(--timing);
  
    &.fill {
      border-image-slice: 1 1 1 1 fill;
      
    }
  }
  
  @keyframes move {
    from { --a: 0deg; }
    to { --a: 360deg; }
  }
  
  @property --a {
    syntax: "<angle>";
    inherits: true;
    initial-value: 0deg;
  }

